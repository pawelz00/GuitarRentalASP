// <auto-generated />
using System;
using GuitarRental.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GuitarRental.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220127135652_addGuitars")]
    partial class addGuitars
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuitarRental.Models.Guitar", b =>
                {
                    b.Property<int>("GuitarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GuitarStringsId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("GuitarTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("GuitarId");

                    b.HasIndex("GuitarStringsId");

                    b.HasIndex("GuitarTypeId");

                    b.ToTable("Guitars");

                    b.HasData(
                        new
                        {
                            GuitarId = 1,
                            GuitarStringsId = 2,
                            GuitarTypeId = 2,
                            Name = "Fender Stratocaster Black",
                            ProductionYear = 2000
                        },
                        new
                        {
                            GuitarId = 2,
                            GuitarStringsId = 2,
                            GuitarTypeId = 3,
                            Name = "Takamine GD10 NS",
                            ProductionYear = 2016
                        },
                        new
                        {
                            GuitarId = 3,
                            GuitarStringsId = 1,
                            GuitarTypeId = 1,
                            Name = "Yamaha c30m 4/4",
                            ProductionYear = 2021
                        });
                });

            modelBuilder.Entity("GuitarRental.Models.GuitarStrings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StringsName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("GuitarStrings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StringsName = "Nylonowe"
                        },
                        new
                        {
                            Id = 2,
                            StringsName = "Stalowe"
                        });
                });

            modelBuilder.Entity("GuitarRental.Models.GuitarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("GuitarTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Klasyczna"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Elektryczna"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Akustyczna"
                        });
                });

            modelBuilder.Entity("GuitarRental.Models.Guitar", b =>
                {
                    b.HasOne("GuitarRental.Models.GuitarStrings", "GuitarStrings")
                        .WithMany("Guitars")
                        .HasForeignKey("GuitarStringsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuitarRental.Models.GuitarType", "GuitarType")
                        .WithMany("Guitars")
                        .HasForeignKey("GuitarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuitarStrings");

                    b.Navigation("GuitarType");
                });

            modelBuilder.Entity("GuitarRental.Models.GuitarStrings", b =>
                {
                    b.Navigation("Guitars");
                });

            modelBuilder.Entity("GuitarRental.Models.GuitarType", b =>
                {
                    b.Navigation("Guitars");
                });
#pragma warning restore 612, 618
        }
    }
}
